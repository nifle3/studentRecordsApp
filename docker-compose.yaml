version: "3.8"

name: trpo-project

services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    networks:
      - prod
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    links:
      - postgres
      - minio
    environment:
      - DB_USER=nifle3
      - DB_PASSWORD=12345
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=student_records
      - DB_SSL=disable
      - FS_USER=nifle
      - FS_PASSWORD=Strong#Pass#2022
      - FS_END_POINT=minio:9000
      - SERVER_PORT=8080
      - SERVER_HOST=localhost
      - JWT_SECRET_KEY=mySecretKey
    healthcheck:
      test: curl --fail http://localhost:8080/v1/ping || exit 1
      interval: 10s
      timeout: 3s
      retries: 3

  postgres:
    container_name: postgres
    image: postgres:16.2
    restart: always
    environment:
      POSTGRES_USER: nifle3
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: student_records
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/data/postgres
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - prod
    healthcheck:
      test: pg_isready -U nifle3 -d student_records
      interval: 10s
      timeout: 3s
      retries: 3

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: nifle3123@gmail.com
      PGADMIN_DEFAULT_PASSWORD: nifle3password
    ports:
      - 5050:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - prod
    restart: unless-stopped

  minio:
    container_name: minio
    image: quay.io/minio/minio:RELEASE.2024-04-18T19-09-19Z
    restart: always
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio_data:/data
    networks:
      - prod
    environment:
      MINIO_ROOT_USER: nifle
      MINIO_ROOT_PASSWORD: Strong#Pass#2022
    command: server --console-address ":9001" /data
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 5s
      retries: 5

  webserver:
    image: nginx:latest
    container_name: webserver
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      - prod
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/localhost.crt:/etc/nginx/ssl/live/kitup.local.org/localhost.crt
      - ./nginx/localhost.key:/etc/nginx/ssl/live/kitup.local.org/localhost.key
    depends_on:
      - backend
      - frontend

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: on-failure
    ports: 
      - 3001:3000
    networks:
      - prod
    healthcheck:
      test: curl --fail http://localhost:3000/ping || exit 1
      interval: 10s
      timeout: 3s
      retries: 3
      
networks:
  prod:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  minio_data: